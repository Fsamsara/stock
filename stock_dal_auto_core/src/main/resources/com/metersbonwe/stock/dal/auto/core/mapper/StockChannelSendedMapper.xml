<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.metersbonwe.stock.dal.auto.core.mapper.StockChannelSendedMapper">
	<resultMap id="BaseResultMap"
		type="com.metersbonwe.stock.po.core.StockChannelSended">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="prod_id" jdbcType="VARCHAR" property="prodId" />
		<result column="channel_code" jdbcType="VARCHAR" property="channelCode" />
		<result column="stock_sended" jdbcType="INTEGER" property="stockSended" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="acc_time" jdbcType="TIMESTAMP" property="accTime" />
		<result column="error_detail" jdbcType="VARCHAR" property="errorDetail" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, prod_id, channel_code, stock_sended, status, acc_time,
		error_detail,
		update_time
	</sql>


	<select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from stock_channel_sended_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
	</select>



	<select id="selectByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelSended"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from stock_channel_sended_${record.tableSuffix}
		where id =
		#{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelSended">
		delete from
		stock_channel_sended_${tableSuffix}
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.metersbonwe.stock.po.core.StockChannelSendedExample">
		delete from stock_channel_sended_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.metersbonwe.stock.po.core.StockChannelSended">
		insert into
		stock_channel_sended_${tableSuffix} (id, prod_id, channel_code,
		stock_sended, status,
		acc_time,
		error_detail, update_time)
		values
		(#{id,jdbcType=INTEGER},
		#{prodId,jdbcType=VARCHAR},
		#{channelCode,jdbcType=VARCHAR},
		#{stockSended,jdbcType=INTEGER},
		#{status,jdbcType=VARCHAR},
		#{accTime,jdbcType=TIMESTAMP},
		#{errorDetail,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.metersbonwe.stock.po.core.StockChannelSended">
		insert into stock_channel_sended_${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="prodId != null">
				prod_id,
			</if>
			<if test="channelCode != null">
				channel_code,
			</if>
			<if test="stockSended != null">
				stock_sended,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="accTime != null">
				acc_time,
			</if>
			<if test="errorDetail != null">
				error_detail,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="prodId != null">
				#{prodId,jdbcType=VARCHAR},
			</if>
			<if test="channelCode != null">
				#{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="stockSended != null">
				#{stockSended,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="accTime != null">
				#{accTime,jdbcType=TIMESTAMP},
			</if>
			<if test="errorDetail != null">
				#{errorDetail,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.metersbonwe.stock.po.core.StockChannelSendedExample"
		resultType="java.lang.Integer">
		select count(*) from stock_channel_sended_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update stock_channel_sended_${record.tableSuffix}
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.prodId != null">
				prod_id = #{record.prodId,jdbcType=VARCHAR},
			</if>
			<if test="record.channelCode != null">
				channel_code = #{record.channelCode,jdbcType=VARCHAR},
			</if>
			<if test="record.stockSended != null">
				stock_sended = #{record.stockSended,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.accTime != null">
				acc_time = #{record.accTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.errorDetail != null">
				error_detail = #{record.errorDetail,jdbcType=VARCHAR},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update stock_channel_sended_${record.tableSuffix}
		set id =
		#{record.id,jdbcType=INTEGER},
		prod_id =
		#{record.prodId,jdbcType=VARCHAR},
		channel_code =
		#{record.channelCode,jdbcType=VARCHAR},
		stock_sended =
		#{record.stockSended,jdbcType=INTEGER},
		status =
		#{record.status,jdbcType=VARCHAR},
		acc_time =
		#{record.accTime,jdbcType=TIMESTAMP},
		error_detail =
		#{record.errorDetail,jdbcType=VARCHAR},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.metersbonwe.stock.po.core.StockChannelSended">
		update stock_channel_sended_${tableSuffix}
		<set>
			<if test="prodId != null">
				prod_id = #{prodId,jdbcType=VARCHAR},
			</if>
			<if test="channelCode != null">
				channel_code = #{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="stockSended != null">
				stock_sended = #{stockSended,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="accTime != null">
				acc_time = #{accTime,jdbcType=TIMESTAMP},
			</if>
			<if test="errorDetail != null">
				error_detail = #{errorDetail,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelSended">
		update
		stock_channel_sended_${tableSuffix}
		set prod_id =
		#{prodId,jdbcType=VARCHAR},
		channel_code =
		#{channelCode,jdbcType=VARCHAR},
		stock_sended =
		#{stockSended,jdbcType=INTEGER},
		status = #{status,jdbcType=VARCHAR},
		acc_time = #{accTime,jdbcType=TIMESTAMP},
		error_detail =
		#{errorDetail,jdbcType=VARCHAR},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>