<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.metersbonwe.stock.dal.auto.core.mapper.StockChannelProdMapper">
	<resultMap id="BaseResultMap"
		type="com.metersbonwe.stock.po.core.StockChannelProd">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="channel_code" jdbcType="VARCHAR" property="channelCode" />
		<result column="prod_id" jdbcType="VARCHAR" property="prodId" />
		<result column="private_stock" jdbcType="INTEGER" property="privateStock" />
		<result column="channel_group_private_stock" jdbcType="INTEGER"
			property="channelGroupPrivateStock" />
		<result column="final_free_stock" jdbcType="INTEGER" property="finalFreeStock" />
		<result column="lock_stock" jdbcType="INTEGER" property="lockStock" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, channel_code, prod_id, private_stock,
		channel_group_private_stock,
		final_free_stock,
		lock_stock, update_time
	</sql>
	<select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from stock_channel_prod_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelProd"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from stock_channel_prod_${record.tableSuffix}
		where id =
		#{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelProd">
		delete from
		stock_channel_prod_${tableSuffix}
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.metersbonwe.stock.po.core.StockChannelProdExample">
		delete from stock_channel_prod_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.metersbonwe.stock.po.core.StockChannelProd">
		insert into
		stock_channel_prod_${tableSuffix}
		(id, channel_code, prod_id,
		private_stock, channel_group_private_stock,
		final_free_stock,
		lock_stock, update_time
		)
		values
		(#{id,jdbcType=INTEGER},
		#{channelCode,jdbcType=VARCHAR},
		#{prodId,jdbcType=VARCHAR},
		#{privateStock,jdbcType=INTEGER},
		#{channelGroupPrivateStock,jdbcType=INTEGER},
		#{finalFreeStock,jdbcType=INTEGER}, #{lockStock,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.metersbonwe.stock.po.core.StockChannelProd">
		insert into stock_channel_prod_${tableSuffix}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="channelCode != null">
				channel_code,
			</if>
			<if test="prodId != null">
				prod_id,
			</if>
			<if test="privateStock != null">
				private_stock,
			</if>
			<if test="channelGroupPrivateStock != null">
				channel_group_private_stock,
			</if>
			<if test="finalFreeStock != null">
				final_free_stock,
			</if>
			<if test="lockStock != null">
				lock_stock,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="channelCode != null">
				#{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="prodId != null">
				#{prodId,jdbcType=VARCHAR},
			</if>
			<if test="privateStock != null">
				#{privateStock,jdbcType=INTEGER},
			</if>
			<if test="channelGroupPrivateStock != null">
				#{channelGroupPrivateStock,jdbcType=INTEGER},
			</if>
			<if test="finalFreeStock != null">
				#{finalFreeStock,jdbcType=INTEGER},
			</if>
			<if test="lockStock != null">
				#{lockStock,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.metersbonwe.stock.po.core.StockChannelProdExample"
		resultType="java.lang.Integer">
		select count(*) from stock_channel_prod_${record.tableSuffix}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update stock_channel_prod_${record.tableSuffix}
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.channelCode != null">
				channel_code = #{record.channelCode,jdbcType=VARCHAR},
			</if>
			<if test="record.prodId != null">
				prod_id = #{record.prodId,jdbcType=VARCHAR},
			</if>
			<if test="record.privateStock != null">
				private_stock = #{record.privateStock,jdbcType=INTEGER},
			</if>
			<if test="record.channelGroupPrivateStock != null">
				channel_group_private_stock =
				#{record.channelGroupPrivateStock,jdbcType=INTEGER},
			</if>
			<if test="record.finalFreeStock != null">
				final_free_stock =
				#{record.finalFreeStock,jdbcType=INTEGER},
			</if>
			<if test="record.lockStock != null">
				lock_stock = #{record.lockStock,jdbcType=INTEGER},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update stock_channel_prod_${record.tableSuffix}
		set id =
		#{record.id,jdbcType=INTEGER},
		channel_code =
		#{record.channelCode,jdbcType=VARCHAR},
		prod_id =
		#{record.prodId,jdbcType=VARCHAR},
		private_stock =
		#{record.privateStock,jdbcType=INTEGER},
		channel_group_private_stock =
		#{record.channelGroupPrivateStock,jdbcType=INTEGER},
		final_free_stock =
		#{record.finalFreeStock,jdbcType=INTEGER},
		lock_stock =
		#{record.lockStock,jdbcType=INTEGER},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.metersbonwe.stock.po.core.StockChannelProd">
		update stock_channel_prod_${tableSuffix}
		<set>
			<if test="channelCode != null">
				channel_code = #{channelCode,jdbcType=VARCHAR},
			</if>
			<if test="prodId != null">
				prod_id = #{prodId,jdbcType=VARCHAR},
			</if>
			<if test="privateStock != null">
				private_stock = #{privateStock,jdbcType=INTEGER},
			</if>
			<if test="channelGroupPrivateStock != null">
				channel_group_private_stock =
				#{channelGroupPrivateStock,jdbcType=INTEGER},
			</if>
			<if test="finalFreeStock != null">
				final_free_stock = #{finalFreeStock,jdbcType=INTEGER},
			</if>
			<if test="lockStock != null">
				lock_stock = #{lockStock,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.metersbonwe.stock.po.core.StockChannelProd">
		update
		stock_channel_prod_${tableSuffix}
		set channel_code =
		#{channelCode,jdbcType=VARCHAR},
		prod_id = #{prodId,jdbcType=VARCHAR},
		private_stock =
		#{privateStock,jdbcType=INTEGER},
		channel_group_private_stock =
		#{channelGroupPrivateStock,jdbcType=INTEGER},
		final_free_stock =
		#{finalFreeStock,jdbcType=INTEGER},
		lock_stock =
		#{lockStock,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>
